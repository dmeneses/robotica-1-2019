import lejos.hardware.Button;
import lejos.hardware.Sound;
import lejos.hardware.motor.EV3LargeRegulatedMotor;
import lejos.hardware.port.MotorPort;
import lejos.hardware.port.SensorPort;
import lejos.hardware.sensor.EV3TouchSensor;
import lejos.hardware.sensor.EV3UltrasonicSensor;
import lejos.robotics.SampleProvider;
import lejos.utility.Delay;


public class Challenge2 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		EV3LargeRegulatedMotor motorB = new EV3LargeRegulatedMotor(MotorPort.B);
		EV3LargeRegulatedMotor motorC = new EV3LargeRegulatedMotor(MotorPort.C);

		EV3TouchSensor sensorTouch=new EV3TouchSensor(SensorPort.S1);
		EV3UltrasonicSensor ojitos = new EV3UltrasonicSensor(SensorPort.S2);
		 

		
		SampleProvider toque=  sensorTouch.getTouchMode();
		boolean sensorToque=false;
		
		while (sensorToque==false){
			System.out.println("esperando a que pase algo");
		
		float[]datosDelSensor=new float [toque.sampleSize()];
		
		toque.fetchSample(datosDelSensor,0);
		
		if (datosDelSensor[0]==0);{
		
			System.out.println("0 equivale a que no hubo toque");
		}
		
		if(datosDelSensor[0]!= 0){
			System.out.println(datosDelSensor[0]+"equivale a que hubo un toque");
			sensorToque=true;
			
		}
	}
		
		 if(sensorToque==true){
			
			 
			 SampleProvider muestrasCapturadasOjitos;
			 muestrasCapturadasOjitos = ojitos.getDistanceMode();
			 
			float distanciaAlObstaculo1 =Float.POSITIVE_INFINITY ;
			while (distanciaAlObstaculo1 == Float.POSITIVE_INFINITY){
				
				float [] datosOjitos=new float[muestrasCapturadasOjitos.sampleSize()];
				muestrasCapturadasOjitos.fetchSample(datosOjitos,0);
				System.out.println("dato enviado por sensor ="+ distanciaAlObstaculo1);
				
				if(distanciaAlObstaculo1 !=Float.POSITIVE_INFINITY){
				
				
				double distanciaCM = distanciaAlObstaculo1*100;
				
				int grados = 0;
				double diametroRueda = 5.5;
				double circunferencia = Math.PI * diametroRueda;
				double numeroDeRotaciones = distanciaCM / circunferencia;
				grados = (int) (numeroDeRotaciones * 360);

				 
				motorB.rotate(grados,true);
				 
				motorC.rotate(grados);
				motorB.stop();
				motorC.stop();
				Delay.msDelay(2000);
				motorB.close();
				motorC.close();
				}
				
			}
				
				
			}
			sensorTouch.close();
			ojitos.close();
		
			 
			Sound.beepSequenceUp();
			
			}
			
	}


