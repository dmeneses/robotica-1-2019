import lejos.hardware.Button;
import lejos.hardware.motor.EV3LargeRegulatedMotor;
import lejos.hardware.port.MotorPort;
import lejos.hardware.port.SensorPort;
import lejos.hardware.sensor.EV3ColorSensor;
import lejos.hardware.sensor.EV3UltrasonicSensor;
import lejos.robotics.SampleProvider;


public class Clase1 {

	public static void main(String[] args) {
		EV3ColorSensor sensorColor= new  EV3ColorSensor(SensorPort.S1);
		EV3UltrasonicSensor ultrasonic= new EV3UltrasonicSensor(SensorPort.S2);
		EV3LargeRegulatedMotor motorA=new  EV3LargeRegulatedMotor(MotorPort.A);
		EV3LargeRegulatedMotor motorD=new  EV3LargeRegulatedMotor(MotorPort.D);
		
		SampleProvider muestrasCapturadasObstaculo=ultrasonic.getDistanceMode();

			float ColorBlanco=6.0f;
			float ColorNegro=7.0f;
			boolean detecteColor = false;
			float colorDetectado = 0;
			while (detecteColor == false) {
 		
		SampleProvider muestrasCapturadasColor=sensorColor.getColorIDMode();
		float [] datosDelSensor= new float[muestrasCapturadasColor.sampleSize()];
		muestrasCapturadasColor.fetchSample(datosDelSensor,0);
		float color=datosDelSensor[0];
		System.out.println(color);
		Button.waitForAnyPress();
		
		
	 
		
		float distanciaAlObstaculo=0;
		while (distanciaAlObstaculo!= Float.POSITIVE_INFINITY){
			float[]datosObstaculo=new float [muestrasCapturadasObstaculo.sampleSize()];
			muestrasCapturadasObstaculo.fetchSample(datosObstaculo,0);
			System.out.println("dato enviado por  sensor = "+ distanciaAlObstaculo);
			
		}
		
		double diametroRueda = 5.5;

			      
		double distanciaAMover=80;
		distanciaAMover=distanciaAMover/100;
		int grados = 0;
		double circunferencia1 = Math.PI * diametroRueda;
		double numeroDeRotaciones = distanciaAMover / circunferencia1;
		grados = (int) (numeroDeRotaciones * 360);

		int velocidad = 200;
		motorA.setSpeed(velocidad);
		motorA.rotate(grados, true);
		motorD.setSpeed(velocidad);
		motorD.rotate(grados);

	}

	 

}
